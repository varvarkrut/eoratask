"""–°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã Eora Chat Bot."""

import os
import sys
from dotenv import load_dotenv
from scraper import SimpleScraper
from enricher import ProjectEnricher


def check_requirements():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    :return: True –µ—Å–ª–∏ –≤—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, False –∏–Ω–∞—á–µ
    :rtype: bool
    """
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π...")

    if not os.path.exists('.env'):
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º:")
        print("OPENAI_API_KEY=your_openai_api_key_here")
        return False

    try:
        load_dotenv()
        api_key = os.getenv('OPENAI_API_KEY')
        if not api_key or api_key == 'your_openai_api_key_here':
            print("‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤ .env")
            return False
    except ImportError:
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        return False

    if not os.path.exists('links.txt'):
        print("‚ùå –§–∞–π–ª links.txt –Ω–µ –Ω–∞–π–¥–µ–Ω")
        print("–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª links.txt —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –ø—Ä–æ–µ–∫—Ç—ã")
        return False

    print("‚úÖ –í—Å–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã")
    return True


def run_scraping():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–æ–≤.
    :return: True –µ—Å–ª–∏ —Å–±–æ—Ä –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ, False –∏–Ω–∞—á–µ
    :rtype: bool
    """
    print("\nüì• –®–∞–≥ 1: –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞...")

    if os.path.exists('projects_raw.json'):
        choice = input("–§–∞–π–ª projects_raw.json —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å? (y/n): ")
        if choice.lower() != 'y':
            print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ")
            return True

    try:
        scraper = SimpleScraper()
        projects = scraper.scrape_from_file('links.txt')
        successful = len([p for p in projects if p['status'] == 'success'])
        print(f"‚úÖ –°–æ–±—Ä–∞–Ω–æ {successful} –∏–∑ {len(projects)} –ø—Ä–æ–µ–∫—Ç–æ–≤")
        if successful == 0:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ")
            return False
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False


def run_enrichment():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ OpenAI API.
    :return: True –µ—Å–ª–∏ –æ–±–æ–≥–∞—â–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ, False –∏–Ω–∞—á–µ
    :rtype: bool
    """
    print("\nüß† –®–∞–≥ 2: –û–±–æ–≥–∞—â–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ OpenAI...")

    if os.path.exists('projects_enriched.json'):
        msg = "–§–∞–π–ª projects_enriched.json —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å? (y/n): "
        choice = input(msg)
        if choice.lower() != 'y':
            print("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
            return True

    try:
        enricher = ProjectEnricher()
        enriched_projects = enricher.enrich_all_projects()
        if enriched_projects:
            successful = len([p for p in enriched_projects if 'enriched' in p])
            print(f"‚úÖ –û–±–æ–≥–∞—â–µ–Ω–æ {successful} –ø—Ä–æ–µ–∫—Ç–æ–≤")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–æ–≥–∞—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–æ–≥–∞—â–µ–Ω–∏—è: {e}")
        print("–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("- –ü—Ä–æ–±–ª–µ–º—ã —Å OpenAI API")
        print("- –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ")
        print("- –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á")
        return False


def main():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã.
    :return: True –µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, False –∏–Ω–∞—á–µ
    :rtype: bool
    """
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∏—Å—Ç–µ–º—ã Eora Chat Bot")
    print("=" * 40)

    if not check_requirements():
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞.")
        return False

    if not run_scraping():
        print("\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö")
        return False

    if not run_enrichment():
        print("\n‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ –æ–±–æ–≥–∞—â–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
        print("–ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–µ–∑ –æ–±–æ–≥–∞—â–µ–Ω–∏—è (–±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ö—É–∂–µ)")
        return False

    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
    print("  ‚úÖ projects_raw.json - –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    print("  ‚úÖ projects_enriched.json - –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")

    print("\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ —á–∞—Ç-–±–æ—Ç–∞:")
    print("python chat_bot.py")

    return True


if __name__ == "__main__":
    success = main()
    if not success:
        sys.exit(1)
