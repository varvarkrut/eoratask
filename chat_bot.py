"""–ü—Ä–æ—Å—Ç–æ–π —á–∞—Ç-–±–æ—Ç Eora —Å RAG —Å–∏—Å—Ç–µ–º–æ–π."""

from simple_langchain import SimpleLangChain
import os


def main():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —á–∞—Ç-–±–æ—Ç–∞ Eora —Å RAG —Å–∏—Å—Ç–µ–º–æ–π.
    """
    print("ü§ñ –ü—Ä–æ—Å—Ç–æ–π LangChain —á–∞—Ç-–±–æ—Ç Eora!")
    print("–í–≤–µ–¥–∏—Ç–µ 'exit' –¥–ª—è –≤—ã—Ö–æ–¥–∞.\n")

    if not os.path.exists('.env'):
        print("‚ùå –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env —Å –≤–∞—à–∏–º OpenAI API –∫–ª—é—á–æ–º:")
        print("OPENAI_API_KEY=your_api_key_here\n")
        return

    try:
        print("üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ LangChain...")
        rag = SimpleLangChain()
        rag.setup()
        print("‚úÖ –ì–æ—Ç–æ–≤–æ!\n")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        print("\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("1. –ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á –≤ .env —Ñ–∞–π–ª–µ")
        print("2. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±–æ–≥–∞—â–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–∑–∞–ø—É—Å—Ç–∏—Ç–µ setup.py)")
        print("3. –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º\n")
        return

    print("üí° –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤:")
    examples = [
        "–ß—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –¥–ª—è —Ä–∏—Ç–µ–π–ª–µ—Ä–æ–≤?",
        "–ï—Å—Ç—å –ª–∏ –æ–ø—ã—Ç —Å HR –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π?",
        "–†–∞–±–æ—Ç–∞–ª–∏ —Å –ø–æ–∏—Å–∫–æ–º –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º?",
        "–ö–∞–∫–∏–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∞–Ω–∫–æ–≤?"
    ]

    for example in examples:
        print(f"   ‚Ä¢ {example}")
    print()

    while True:
        try:
            question = input("‚ùì –í–∞—à –≤–æ–ø—Ä–æ—Å: ").strip()

            if question.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥', 'q']:
                print("üëã –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break

            if not question:
                continue

            print("ü§î –î—É–º–∞—é...")
            answer = rag.ask(question)

            print("\n" + "=" * 50)
            print(answer)
            print("=" * 50 + "\n")

        except KeyboardInterrupt:
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break

        except Exception as e:
            print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
            print("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞\n")


if __name__ == "__main__":
    main()
